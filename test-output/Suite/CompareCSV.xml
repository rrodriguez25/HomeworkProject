<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="12" hostname="MRIPF3GRQ4B" failures="4" tests="5" name="CompareCSV" time="0.057" errors="0" timestamp="2024-07-31T15:18:51 EDT">
  <testcase classname="TestNG.BaseTest" name="@AfterClass checkStatus" time="-1.722453531126E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @AfterClass annotated checkStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @AfterClass annotated checkStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass checkStatus -->
  <testcase classname="TestNG.BaseTest" name="@AfterClass checkStatus" time="-1.722453531135E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @AfterClass annotated checkStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @AfterClass annotated checkStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass checkStatus -->
  <testcase classname="TestNG.BaseTest" name="@AfterClass checkStatus" time="-1.722453531139E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @AfterClass annotated checkStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @AfterClass annotated checkStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass checkStatus -->
  <testcase classname="TestNG.BaseTest" name="@AfterClass checkStatus" time="-1.722453531144E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @AfterClass annotated checkStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @AfterClass annotated checkStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass checkStatus -->
  <testcase classname="TestNG.BaseTest" name="@AfterClass checkStatus" time="-1.722453531151E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @AfterClass annotated checkStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @AfterClass annotated checkStatus.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @AfterClass checkStatus -->
  <testcase classname="Tests.CompareColumnHeaderCount" name="CompareColumnHeaderCountTest" time="0.01"/>
  <testcase classname="Tests.CompareColumnHeaderName" name="CompareColumnsHeaderNameTest" time="0.003">
    <failure type="java.lang.AssertionError" message="Found 1 ColumnHeaders names not matching expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: Found 1 ColumnHeaders names not matching expected [true] but found [false]
at Tests.CompareColumnHeaderName.CompareColumnsHeaderNameTest(CompareColumnHeaderName.java:76)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- CompareColumnsHeaderNameTest -->
  <testcase classname="Tests.CompareFileSize" name="CompareFileSizeTest" time="0.001">
    <failure type="java.lang.AssertionError" message="TEST FAILED: File Sizes does not match. CSV1 size in bytes: 1684 bytes. CSV2 size in bytes: 1714 bytes. expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: TEST FAILED: File Sizes does not match. CSV1 size in bytes: 1684 bytes. CSV2 size in bytes: 1714 bytes. expected [true] but found [false]
at Tests.CompareFileSize.CompareFileSizeTest(CompareFileSize.java:30)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- CompareFileSizeTest -->
  <testcase classname="Tests.CompareRowCount" name="CompareRowCountTest" time="0.002">
    <failure type="java.lang.AssertionError" message="TEST FAILED: Number of Row does not match. CSV1 total rows: 21. CSV2 total rows: 22. expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: TEST FAILED: Number of Row does not match. CSV1 total rows: 21. CSV2 total rows: 22. expected [true] but found [false]
at Tests.CompareRowCount.CompareRowCountTest(CompareRowCount.java:47)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- CompareRowCountTest -->
  <testcase classname="Tests.CompareRowData" name="CompareColumnsHeaderName" time="0.003">
    <failure type="java.lang.AssertionError" message="Found 1 number of Rows not matching. expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: Found 1 number of Rows not matching. expected [true] but found [false]
at Tests.CompareRowData.CompareColumnsHeaderName(CompareRowData.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- CompareColumnsHeaderName -->
  <testcase classname="TestNG.BaseTest" name="@AfterSuite generateExtentReports" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExtentReports -->
  <testcase classname="TestNG.BaseTest" name="@AfterSuite generateExtentReports" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExtentReports -->
  <testcase classname="TestNG.BaseTest" name="@AfterSuite generateExtentReports" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExtentReports -->
  <testcase classname="TestNG.BaseTest" name="@AfterSuite generateExtentReports" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExtentReports -->
  <testcase classname="TestNG.BaseTest" name="@BeforeSuite initialiseExtentReports" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite initialiseExtentReports -->
  <testcase classname="TestNG.BaseTest" name="@BeforeSuite initialiseExtentReports" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite initialiseExtentReports -->
  <testcase classname="TestNG.BaseTest" name="@BeforeSuite initialiseExtentReports" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite initialiseExtentReports -->
  <testcase classname="TestNG.BaseTest" name="@BeforeSuite initialiseExtentReports" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite initialiseExtentReports -->
  <testcase classname="TestNG.BaseTest" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="TestNG.BaseTest" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="TestNG.BaseTest" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="TestNG.BaseTest" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
</testsuite> <!-- CompareCSV -->
